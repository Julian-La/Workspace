import java.util.HashSet;
import java.util.TreeSet;

public class Sets {

	public static void main(String[] args) {
		/*
		 * HashSet destroys the order of your array.
		 * Therefore it filters duplicates out AND it's way faster then
		 * the regular ArrayList because data is saved with hashing. (index)
		 */
		HashSet<String> students = new HashSet<>();
		students.add("Monika");
		students.add("Richard");
		students.add("Simone");
		students.add("Monika");
		for(String student:students) {
			System.out.println(student);
		}
		if(students.contains("Thomas")) {
			System.out.println("Student ist auf der Liste.");
			System.out.println("---------------------");
		} else {
			System.out.println("Student steht nicht auf der Liste!");
			System.out.println("---------------------");
		}
		/*
		 * A TreeSet like all Set refuses duplicate values.
		 * TreeSet will sort your array at all times. 
		 * Another difference to Collections.sort is that 
		 * you can only add one comparator.
		 */
		TreeSet<String> students2 = new TreeSet<>();
		students2.add("Selina");
		students2.add("Anna");
		students2.add("Theresa");
		students2.add("Anna");
		for(String studentInTree:students2) {
			System.out.println(studentInTree);
	}
}
}